#! /bin/sh
fancy_echo() {
  printf "\n%b\n" "$1"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="$2"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if (( skip_new_line )); then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}



trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

if [ -z "$PS1" ]; then
  fancy_echo "What is your Github Username?"
  read github_name
else
  github_name=dustinleblanc
fi

fancy_echo "Updating system packages ..."
if command -v aptitude >/dev/null; then
  fancy_echo "Using aptitude ..."
else
  fancy_echo "Installing aptitude ..."
  sudo apt-get install -y aptitude
fi

sudo aptitude update
sudo aptitude -y dist-upgrade

fancy_echo "Installing git, for source control management ..."
sudo aptitude install -y git

if ! command -v rcup >/dev/null; then
  fancy_echo "Setting up RCM to manage dotfiles ..."
  wget -qO - https://apt.thoughtbot.com/thoughtbot.gpg.key | sudo apt-key add -
  echo "deb https://apt.thoughtbot.com/debian/ stable main" \
    | sudo tee /etc/apt/sources.list.d/thoughtbot.list
  sudo aptitude update
  sudo aptitude install rcm
fi

if [ ! -d "$HOME/dotfiles" ]; then
  fancy_echo "Getting you started with some sweet sweet dotfiles ..."
  git clone https://github.com/thinktandem/dotfiles.git ~/dotfiles
  mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}
  mkdir -p $XDG_CONFIG_HOME/nvim
  ln -s ~/.vim/autoload ~/.config/nvim/
  ln -s ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim
  env RCRC=$HOME/dotfiles/rcrc rcup 
fi

if [ ! -d "$HOME/dotfiles-local" ]; then 
  if git ls-remote https://github.com/$github_name/dotfiles-local.git -q; then
    fancy_echo "Grabbing your local dotfiles ..."
    git clone https://github.com/$github_name/dotfiles-local.git \
      ~/dotfiles-local
    env RCRC=$HOME/dotfiles/rcrc rcup 
  fi
fi

fancy_echo "Installing ctags ..."
sudo aptitude install -y exuberant-ctags

fancy_echo "Installing neovim ..."
sudo aptitude install -y neovim

fancy_echo "Setting Up Neovim for sweet autocomplete ..."
sudo aptitude install -y python3-pip
pip3 install --user neovim

fancy_echo "Installing curl ..."
sudo aptitude install -y curl

fancy_echo "Installing zsh ..."
sudo aptitude install -y zsh

fancy_echo "Changing your shell to zsh ..."
chsh -s $(which zsh)

if [ ! -d "$HOME/.nodenv" ]; then
  fancy_echo "Installing nodenv to manage node versions ..."
  git clone https://github.com/nodenv/nodenv.git ~/.nodenv

  export PATH="$HOME/.nodenv/bin:$PATH"
  eval "$(nodenv init - zsh)"
fi

if [ ! -d "$HOME/.nodenv/plugins/node-build" ]; then
  fancy_echo "Install node-build, to install Node versions ..."
  git clone \
    https://github.com/nodenv/node-build.git $(nodenv root)/plugins/node-build
fi

fancy_echo "Installing the version of Node used for Lando ..."
LANDO_NODE=$(curl -sSL \
  https://raw.githubusercontent.com/lando/lando/master/.node-version)

fancy_echo "Setting $LANDO_NODE as the global default Node ..."

nodenv install -s $LANDO_NODE
nodenv rehash

if ! command -v yarn >/dev/null; then
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo aptitude remove cmdtest
  sudo aptitude update
  sudo aptitude install --without-recommends yarn
fi
if [ ! -f ~/.ssh/id_rsa.pub ]; then
  fancy_echo "Making sure you're setup for ssh ..."
  fancy_echo "Enter your email and then press [ENTER]:"
  read email
  ssh-keygen -t rsa -b 4096 -C "$email"
  eval "$(ssh-agent -s)"
  ssh-add ~/.ssh/id_rsa
fi

if ! command -v hub >/dev/null; then
  fancy_echo "Setting up Hub ..."
  # Install binary and documentation
  sudo add-apt-repository ppa:cpick/hub
  sudo aptitude update
  sudo aptitude install hub

  # add alias
  append_to_zshrc "$(hub alias -s)"
fi

if ! command -v docker >/dev/null; then
  fancy_echo "Installing Docker ..."
  sudo aptitude remove docker docker-engine docker.io
  sudo aptitude install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-common-properties
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  sudo add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    bionic \
    stable"
  sudo aptitude update
  sudo aptitude install docker-ce
  sudo usermod -aG docker $USER
  fancy_echo "Don't forget to logout and back in for Docker to work!"
fi


if ! command -v lando >/dev/null; then
  fancy_echo "Picking Lando up from Cloud City ..."
  TEMP_DEB="$(mktemp)" &&
    wget -O "$TEMP_DEB" \
    'https://github.com/lando/lando/releases/download/v3.0.0-rc.1/lando-v3.0.0-rc.1.deb' &&
    sudo dpkg -i "$TEMP_DEB"
  rm -f "$TEMP_DEB"
fi


if [ ! -d ~/.fonts ]; then
  fancy_echo "Getting some fancy icons for a sweet lookin terminal ..."
  git clone https://github.com/gabrielelana/awesome-terminal-fonts.git \
    ~/.awesome-terminal-fonts
  mkdir -p ~/.fonts
  sed -i 's/<family>PragmataPro<\/family>/<family>Roboto Mono<\/family>/' \
    ~/.awesome-terminal-fonts/config/10-symbols.conf
  cp -f ~/.awesome-terminal-fonts/build/*.ttf ~/.fonts
  cp -f ~/.awesome-terminal-fonts/build/*.sh ~/.fonts
  mkdir -p ~/.config/fontconfig/conf.d
  cp -f ~/.awesome-terminal-fonts/config/* ~/.config/fontconfig/conf.d
  fc-cache -fv ~/.fonts
  fancy_echo "If you want to use the fancy icons, make sure to use roboto mono"
fi


if [ ! -f ~/antigen.zsh ]; then
  fancy_echo "Setting up Antigen for fancy ZSH things..."
  curl -L git.io/antigen > ~/antigen.zsh
  append_to_zshrc "source ~/antigen.zsh"
  append_to_zshrc "antigen bundle git"
  append_to_zshrc "antigen bundle zsh-users/zsh-syntax-highlighting"
  append_to_zshrc "antigen bundle zsh-users/zsh-autosuggestions"
  append_to_zshrc "antigen apply"
fi

if [ -f ~/.laptop.local ]; then
  fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  source ~/.laptop.local
fi

